// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import "strconv"

/// edge difference calculate type
type DiffType int8

const (
	///< evaluate difference undefined
	DiffTypeUNDEFINE             DiffType = 0
	///< disable the difference calculate
	DiffTypeDIFF_DISABLED        DiffType = 1
	///< calculate last two edge
	DiffTypeDIFF_STANDARD_MODE   DiffType = 2
	///< negative edge to negative edge difference
	DiffTypeDIFF_NEG_TO_NEG_EDGE DiffType = 3
	///< positive edge to negative edge difference
	DiffTypeDIFF_POS_TO_NEG_EDGE DiffType = 4
	///< negative edge to positive edge difference
	DiffTypeDIFF_NEG_TO_POS_EDGE DiffType = 5
	///< positive edge to positive edge difference
	DiffTypeDIFF_POS_TO_POS_EDGE DiffType = 6
)

var EnumNamesDiffType = map[DiffType]string{
	DiffTypeUNDEFINE:             "UNDEFINE",
	DiffTypeDIFF_DISABLED:        "DIFF_DISABLED",
	DiffTypeDIFF_STANDARD_MODE:   "DIFF_STANDARD_MODE",
	DiffTypeDIFF_NEG_TO_NEG_EDGE: "DIFF_NEG_TO_NEG_EDGE",
	DiffTypeDIFF_POS_TO_NEG_EDGE: "DIFF_POS_TO_NEG_EDGE",
	DiffTypeDIFF_NEG_TO_POS_EDGE: "DIFF_NEG_TO_POS_EDGE",
	DiffTypeDIFF_POS_TO_POS_EDGE: "DIFF_POS_TO_POS_EDGE",
}

var EnumValuesDiffType = map[string]DiffType{
	"UNDEFINE":             DiffTypeUNDEFINE,
	"DIFF_DISABLED":        DiffTypeDIFF_DISABLED,
	"DIFF_STANDARD_MODE":   DiffTypeDIFF_STANDARD_MODE,
	"DIFF_NEG_TO_NEG_EDGE": DiffTypeDIFF_NEG_TO_NEG_EDGE,
	"DIFF_POS_TO_NEG_EDGE": DiffTypeDIFF_POS_TO_NEG_EDGE,
	"DIFF_NEG_TO_POS_EDGE": DiffTypeDIFF_NEG_TO_POS_EDGE,
	"DIFF_POS_TO_POS_EDGE": DiffTypeDIFF_POS_TO_POS_EDGE,
}

func (v DiffType) String() string {
	if s, ok := EnumNamesDiffType[v]; ok {
		return s
	}
	return "DiffType(" + strconv.FormatInt(int64(v), 10) + ")"
}
