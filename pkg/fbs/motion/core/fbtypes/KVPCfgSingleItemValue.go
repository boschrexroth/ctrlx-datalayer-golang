// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import (
	"strconv"
	flatbuffers "github.com/google/flatbuffers/go"
)

/// Use a union for a single value (which might have one of the supported types)
type KVPCfgSingleItemValue byte

const (
	KVPCfgSingleItemValueNONE                   KVPCfgSingleItemValue = 0
	KVPCfgSingleItemValueKVPCfgInt64            KVPCfgSingleItemValue = 1
	KVPCfgSingleItemValueKVPCfgDouble           KVPCfgSingleItemValue = 2
	KVPCfgSingleItemValueKVPCfgBool             KVPCfgSingleItemValue = 3
	KVPCfgSingleItemValueKVPCfgString           KVPCfgSingleItemValue = 4
	KVPCfgSingleItemValueKVPCfgDoubleUnit       KVPCfgSingleItemValue = 5
	KVPCfgSingleItemValueKVPCfgInt64Vector      KVPCfgSingleItemValue = 6
	KVPCfgSingleItemValueKVPCfgDoubleVector     KVPCfgSingleItemValue = 7
	KVPCfgSingleItemValueKVPCfgBoolVector       KVPCfgSingleItemValue = 8
	KVPCfgSingleItemValueKVPCfgStringVector     KVPCfgSingleItemValue = 9
	KVPCfgSingleItemValueKVPCfgDoubleUnitVector KVPCfgSingleItemValue = 10
)

var EnumNamesKVPCfgSingleItemValue = map[KVPCfgSingleItemValue]string{
	KVPCfgSingleItemValueNONE:                   "NONE",
	KVPCfgSingleItemValueKVPCfgInt64:            "KVPCfgInt64",
	KVPCfgSingleItemValueKVPCfgDouble:           "KVPCfgDouble",
	KVPCfgSingleItemValueKVPCfgBool:             "KVPCfgBool",
	KVPCfgSingleItemValueKVPCfgString:           "KVPCfgString",
	KVPCfgSingleItemValueKVPCfgDoubleUnit:       "KVPCfgDoubleUnit",
	KVPCfgSingleItemValueKVPCfgInt64Vector:      "KVPCfgInt64Vector",
	KVPCfgSingleItemValueKVPCfgDoubleVector:     "KVPCfgDoubleVector",
	KVPCfgSingleItemValueKVPCfgBoolVector:       "KVPCfgBoolVector",
	KVPCfgSingleItemValueKVPCfgStringVector:     "KVPCfgStringVector",
	KVPCfgSingleItemValueKVPCfgDoubleUnitVector: "KVPCfgDoubleUnitVector",
}

var EnumValuesKVPCfgSingleItemValue = map[string]KVPCfgSingleItemValue{
	"NONE":                   KVPCfgSingleItemValueNONE,
	"KVPCfgInt64":            KVPCfgSingleItemValueKVPCfgInt64,
	"KVPCfgDouble":           KVPCfgSingleItemValueKVPCfgDouble,
	"KVPCfgBool":             KVPCfgSingleItemValueKVPCfgBool,
	"KVPCfgString":           KVPCfgSingleItemValueKVPCfgString,
	"KVPCfgDoubleUnit":       KVPCfgSingleItemValueKVPCfgDoubleUnit,
	"KVPCfgInt64Vector":      KVPCfgSingleItemValueKVPCfgInt64Vector,
	"KVPCfgDoubleVector":     KVPCfgSingleItemValueKVPCfgDoubleVector,
	"KVPCfgBoolVector":       KVPCfgSingleItemValueKVPCfgBoolVector,
	"KVPCfgStringVector":     KVPCfgSingleItemValueKVPCfgStringVector,
	"KVPCfgDoubleUnitVector": KVPCfgSingleItemValueKVPCfgDoubleUnitVector,
}

func (v KVPCfgSingleItemValue) String() string {
	if s, ok := EnumNamesKVPCfgSingleItemValue[v]; ok {
		return s
	}
	return "KVPCfgSingleItemValue(" + strconv.FormatInt(int64(v), 10) + ")"
}

type KVPCfgSingleItemValueT struct {
	Type KVPCfgSingleItemValue
	Value interface{}
}

func (t *KVPCfgSingleItemValueT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil {
		return 0
	}
	switch t.Type {
	case KVPCfgSingleItemValueKVPCfgInt64:
		return t.Value.(*KVPCfgInt64T).Pack(builder)
	case KVPCfgSingleItemValueKVPCfgDouble:
		return t.Value.(*KVPCfgDoubleT).Pack(builder)
	case KVPCfgSingleItemValueKVPCfgBool:
		return t.Value.(*KVPCfgBoolT).Pack(builder)
	case KVPCfgSingleItemValueKVPCfgString:
		return t.Value.(*KVPCfgStringT).Pack(builder)
	case KVPCfgSingleItemValueKVPCfgDoubleUnit:
		return t.Value.(*KVPCfgDoubleUnitT).Pack(builder)
	case KVPCfgSingleItemValueKVPCfgInt64Vector:
		return t.Value.(*KVPCfgInt64VectorT).Pack(builder)
	case KVPCfgSingleItemValueKVPCfgDoubleVector:
		return t.Value.(*KVPCfgDoubleVectorT).Pack(builder)
	case KVPCfgSingleItemValueKVPCfgBoolVector:
		return t.Value.(*KVPCfgBoolVectorT).Pack(builder)
	case KVPCfgSingleItemValueKVPCfgStringVector:
		return t.Value.(*KVPCfgStringVectorT).Pack(builder)
	case KVPCfgSingleItemValueKVPCfgDoubleUnitVector:
		return t.Value.(*KVPCfgDoubleUnitVectorT).Pack(builder)
	}
	return 0
}

func (rcv KVPCfgSingleItemValue) UnPack(table flatbuffers.Table) *KVPCfgSingleItemValueT {
	switch rcv {
	case KVPCfgSingleItemValueKVPCfgInt64:
		var x KVPCfgInt64
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgInt64, Value: x.UnPack() }
	case KVPCfgSingleItemValueKVPCfgDouble:
		var x KVPCfgDouble
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgDouble, Value: x.UnPack() }
	case KVPCfgSingleItemValueKVPCfgBool:
		var x KVPCfgBool
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgBool, Value: x.UnPack() }
	case KVPCfgSingleItemValueKVPCfgString:
		var x KVPCfgString
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgString, Value: x.UnPack() }
	case KVPCfgSingleItemValueKVPCfgDoubleUnit:
		var x KVPCfgDoubleUnit
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgDoubleUnit, Value: x.UnPack() }
	case KVPCfgSingleItemValueKVPCfgInt64Vector:
		var x KVPCfgInt64Vector
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgInt64Vector, Value: x.UnPack() }
	case KVPCfgSingleItemValueKVPCfgDoubleVector:
		var x KVPCfgDoubleVector
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgDoubleVector, Value: x.UnPack() }
	case KVPCfgSingleItemValueKVPCfgBoolVector:
		var x KVPCfgBoolVector
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgBoolVector, Value: x.UnPack() }
	case KVPCfgSingleItemValueKVPCfgStringVector:
		var x KVPCfgStringVector
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgStringVector, Value: x.UnPack() }
	case KVPCfgSingleItemValueKVPCfgDoubleUnitVector:
		var x KVPCfgDoubleUnitVector
		x.Init(table.Bytes, table.Pos)
		return &KVPCfgSingleItemValueT{ Type: KVPCfgSingleItemValueKVPCfgDoubleUnitVector, Value: x.UnPack() }
	}
	return nil
}
