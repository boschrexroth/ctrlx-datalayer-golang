// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// configuration of reaction if axis device no longer follows the control's command values
type AxsCfgDevNotFollowingT struct {
	ErrReaction ErrReactionType `json:"errReaction"`
}

func (t *AxsCfgDevNotFollowingT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	AxsCfgDevNotFollowingStart(builder)
	AxsCfgDevNotFollowingAddErrReaction(builder, t.ErrReaction)
	return AxsCfgDevNotFollowingEnd(builder)
}

func (rcv *AxsCfgDevNotFollowing) UnPackTo(t *AxsCfgDevNotFollowingT) {
	t.ErrReaction = rcv.ErrReaction()
}

func (rcv *AxsCfgDevNotFollowing) UnPack() *AxsCfgDevNotFollowingT {
	if rcv == nil { return nil }
	t := &AxsCfgDevNotFollowingT{}
	rcv.UnPackTo(t)
	return t
}

type AxsCfgDevNotFollowing struct {
	_tab flatbuffers.Table
}

func GetRootAsAxsCfgDevNotFollowing(buf []byte, offset flatbuffers.UOffsetT) *AxsCfgDevNotFollowing {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &AxsCfgDevNotFollowing{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsAxsCfgDevNotFollowing(buf []byte, offset flatbuffers.UOffsetT) *AxsCfgDevNotFollowing {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &AxsCfgDevNotFollowing{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *AxsCfgDevNotFollowing) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *AxsCfgDevNotFollowing) Table() flatbuffers.Table {
	return rcv._tab
}

/// error reaction
func (rcv *AxsCfgDevNotFollowing) ErrReaction() ErrReactionType {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return ErrReactionType(rcv._tab.GetUint32(o + rcv._tab.Pos))
	}
	return 4
}

/// error reaction
func (rcv *AxsCfgDevNotFollowing) MutateErrReaction(n ErrReactionType) bool {
	return rcv._tab.MutateUint32Slot(4, uint32(n))
}

func AxsCfgDevNotFollowingStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func AxsCfgDevNotFollowingAddErrReaction(builder *flatbuffers.Builder, errReaction ErrReactionType) {
	builder.PrependUint32Slot(0, uint32(errReaction), 4)
}
func AxsCfgDevNotFollowingEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
