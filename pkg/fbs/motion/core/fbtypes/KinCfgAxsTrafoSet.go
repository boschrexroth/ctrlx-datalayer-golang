// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// data of a single axis transformation set
type KinCfgAxsTrafoSet struct {
	_tab flatbuffers.Table
}

func GetRootAsKinCfgAxsTrafoSet(buf []byte, offset flatbuffers.UOffsetT) *KinCfgAxsTrafoSet {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &KinCfgAxsTrafoSet{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsKinCfgAxsTrafoSet(buf []byte, offset flatbuffers.UOffsetT) *KinCfgAxsTrafoSet {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &KinCfgAxsTrafoSet{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *KinCfgAxsTrafoSet) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *KinCfgAxsTrafoSet) Table() flatbuffers.Table {
	return rcv._tab
}

/// name of the axis transformation set
func (rcv *KinCfgAxsTrafoSet) Name() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// name of the axis transformation set
/// name of the axis transformation
func (rcv *KinCfgAxsTrafoSet) AxsTrafo() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// name of the axis transformation
/// configuration parameter of the axis transformation
func (rcv *KinCfgAxsTrafoSet) Param(obj *KinCfgAxsTrafoAllParam) *KinCfgAxsTrafoAllParam {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(KinCfgAxsTrafoAllParam)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

/// configuration parameter of the axis transformation
func KinCfgAxsTrafoSetStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func KinCfgAxsTrafoSetAddName(builder *flatbuffers.Builder, name flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(name), 0)
}
func KinCfgAxsTrafoSetAddAxsTrafo(builder *flatbuffers.Builder, axsTrafo flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(axsTrafo), 0)
}
func KinCfgAxsTrafoSetAddParam(builder *flatbuffers.Builder, param flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(param), 0)
}
func KinCfgAxsTrafoSetEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
