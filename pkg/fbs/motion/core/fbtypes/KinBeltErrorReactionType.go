// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import "strconv"

/// definition of the type of the error reaction in the kinematics function 'belt synchronization'
type KinBeltErrorReactionType int8

const (
	/// Do only a de-synchronization without any retract motion
	KinBeltErrorReactionTypeDESYNC_ONLY                      KinBeltErrorReactionType = 0
	/// de-synchronize from the belt and retract simultaneously
	KinBeltErrorReactionTypeRETRACT_AND_DESYNC_SIMULTANOUSLY KinBeltErrorReactionType = 1
	/// retract first and then de-synchronize from the belt
	KinBeltErrorReactionTypeRETRACT_FIRST_AND_THEN_DESYNC    KinBeltErrorReactionType = 2
)

var EnumNamesKinBeltErrorReactionType = map[KinBeltErrorReactionType]string{
	KinBeltErrorReactionTypeDESYNC_ONLY:                      "DESYNC_ONLY",
	KinBeltErrorReactionTypeRETRACT_AND_DESYNC_SIMULTANOUSLY: "RETRACT_AND_DESYNC_SIMULTANOUSLY",
	KinBeltErrorReactionTypeRETRACT_FIRST_AND_THEN_DESYNC:    "RETRACT_FIRST_AND_THEN_DESYNC",
}

var EnumValuesKinBeltErrorReactionType = map[string]KinBeltErrorReactionType{
	"DESYNC_ONLY":                      KinBeltErrorReactionTypeDESYNC_ONLY,
	"RETRACT_AND_DESYNC_SIMULTANOUSLY": KinBeltErrorReactionTypeRETRACT_AND_DESYNC_SIMULTANOUSLY,
	"RETRACT_FIRST_AND_THEN_DESYNC":    KinBeltErrorReactionTypeRETRACT_FIRST_AND_THEN_DESYNC,
}

func (v KinBeltErrorReactionType) String() string {
	if s, ok := EnumNamesKinBeltErrorReactionType[v]; ok {
		return s
	}
	return "KinBeltErrorReactionType(" + strconv.FormatInt(int64(v), 10) + ")"
}
