// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type CircleMeaning3dSettingsT struct {
	Type CircleMeaning3d `json:"type"`
}

func (t *CircleMeaning3dSettingsT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	CircleMeaning3dSettingsStart(builder)
	CircleMeaning3dSettingsAddType(builder, t.Type)
	return CircleMeaning3dSettingsEnd(builder)
}

func (rcv *CircleMeaning3dSettings) UnPackTo(t *CircleMeaning3dSettingsT) {
	t.Type = rcv.Type()
}

func (rcv *CircleMeaning3dSettings) UnPack() *CircleMeaning3dSettingsT {
	if rcv == nil { return nil }
	t := &CircleMeaning3dSettingsT{}
	rcv.UnPackTo(t)
	return t
}

type CircleMeaning3dSettings struct {
	_tab flatbuffers.Table
}

func GetRootAsCircleMeaning3dSettings(buf []byte, offset flatbuffers.UOffsetT) *CircleMeaning3dSettings {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &CircleMeaning3dSettings{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsCircleMeaning3dSettings(buf []byte, offset flatbuffers.UOffsetT) *CircleMeaning3dSettings {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &CircleMeaning3dSettings{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *CircleMeaning3dSettings) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CircleMeaning3dSettings) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *CircleMeaning3dSettings) Type() CircleMeaning3d {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return CircleMeaning3d(rcv._tab.GetInt8(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *CircleMeaning3dSettings) MutateType(n CircleMeaning3d) bool {
	return rcv._tab.MutateInt8Slot(4, int8(n))
}

func CircleMeaning3dSettingsStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func CircleMeaning3dSettingsAddType(builder *flatbuffers.Builder, type_ CircleMeaning3d) {
	builder.PrependInt8Slot(0, int8(type_), 0)
}
func CircleMeaning3dSettingsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
