// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// parameters for all command options, that have no parameters (except the perm. type)
type CmdOptNoParamT struct {
	PermType string `json:"permType"`
}

func (t *CmdOptNoParamT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	permTypeOffset := flatbuffers.UOffsetT(0)
	if t.PermType != "" {
		permTypeOffset = builder.CreateString(t.PermType)
	}
	CmdOptNoParamStart(builder)
	CmdOptNoParamAddPermType(builder, permTypeOffset)
	return CmdOptNoParamEnd(builder)
}

func (rcv *CmdOptNoParam) UnPackTo(t *CmdOptNoParamT) {
	t.PermType = string(rcv.PermType())
}

func (rcv *CmdOptNoParam) UnPack() *CmdOptNoParamT {
	if rcv == nil { return nil }
	t := &CmdOptNoParamT{}
	rcv.UnPackTo(t)
	return t
}

type CmdOptNoParam struct {
	_tab flatbuffers.Table
}

func GetRootAsCmdOptNoParam(buf []byte, offset flatbuffers.UOffsetT) *CmdOptNoParam {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &CmdOptNoParam{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsCmdOptNoParam(buf []byte, offset flatbuffers.UOffsetT) *CmdOptNoParam {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &CmdOptNoParam{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *CmdOptNoParam) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CmdOptNoParam) Table() flatbuffers.Table {
	return rcv._tab
}

/// permanent type ("Once", "PermOn" or any other string to switch off; valid options depend on CmdOpt)
func (rcv *CmdOptNoParam) PermType() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// permanent type ("Once", "PermOn" or any other string to switch off; valid options depend on CmdOpt)
func CmdOptNoParamStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func CmdOptNoParamAddPermType(builder *flatbuffers.Builder, permType flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(permType), 0)
}
func CmdOptNoParamEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
