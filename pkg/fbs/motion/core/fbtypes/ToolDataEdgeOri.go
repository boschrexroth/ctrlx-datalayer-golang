// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import "strconv"

/// configuration of tool data edge orientation
type ToolDataEdgeOri int8

const (
	/// no tool orientation
	ToolDataEdgeOriNO_ORI ToolDataEdgeOri = 0
	/// tool orientation 1
	ToolDataEdgeOriORI1   ToolDataEdgeOri = 1
	/// tool orientation 2
	ToolDataEdgeOriORI2   ToolDataEdgeOri = 2
	/// tool orientation 3
	ToolDataEdgeOriORI3   ToolDataEdgeOri = 3
	/// tool orientation 4
	ToolDataEdgeOriORI4   ToolDataEdgeOri = 4
	/// tool orientation 5
	ToolDataEdgeOriORI5   ToolDataEdgeOri = 5
	/// tool orientation 6
	ToolDataEdgeOriORI6   ToolDataEdgeOri = 6
	/// tool orientation 7
	ToolDataEdgeOriORI7   ToolDataEdgeOri = 7
	/// tool orientation 8
	ToolDataEdgeOriORI8   ToolDataEdgeOri = 8
)

var EnumNamesToolDataEdgeOri = map[ToolDataEdgeOri]string{
	ToolDataEdgeOriNO_ORI: "NO_ORI",
	ToolDataEdgeOriORI1:   "ORI1",
	ToolDataEdgeOriORI2:   "ORI2",
	ToolDataEdgeOriORI3:   "ORI3",
	ToolDataEdgeOriORI4:   "ORI4",
	ToolDataEdgeOriORI5:   "ORI5",
	ToolDataEdgeOriORI6:   "ORI6",
	ToolDataEdgeOriORI7:   "ORI7",
	ToolDataEdgeOriORI8:   "ORI8",
}

var EnumValuesToolDataEdgeOri = map[string]ToolDataEdgeOri{
	"NO_ORI": ToolDataEdgeOriNO_ORI,
	"ORI1":   ToolDataEdgeOriORI1,
	"ORI2":   ToolDataEdgeOriORI2,
	"ORI3":   ToolDataEdgeOriORI3,
	"ORI4":   ToolDataEdgeOriORI4,
	"ORI5":   ToolDataEdgeOriORI5,
	"ORI6":   ToolDataEdgeOriORI6,
	"ORI7":   ToolDataEdgeOriORI7,
	"ORI8":   ToolDataEdgeOriORI8,
}

func (v ToolDataEdgeOri) String() string {
	if s, ok := EnumNamesToolDataEdgeOri[v]; ok {
		return s
	}
	return "ToolDataEdgeOri(" + strconv.FormatInt(int64(v), 10) + ")"
}
