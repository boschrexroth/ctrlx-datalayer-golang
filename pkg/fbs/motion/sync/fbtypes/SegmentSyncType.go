// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import "strconv"

/// type of segment transition
type SegmentSyncType int8

const (
	/// Analytic profile, cam profile
	SegmentSyncTypeSEG_DEFAULT      SegmentSyncType = 0
	/// X:rel   Y:rel
	SegmentSyncTypeSEG_FLEX_REL_REL SegmentSyncType = 1
	/// X:abs   Y:rel
	SegmentSyncTypeSEG_FLEX_ABS_REL SegmentSyncType = 2
	/// X:rel   Y:abs
	SegmentSyncTypeSEG_FLEX_REL_ABS SegmentSyncType = 3
	/// X:abs   Y:abs
	SegmentSyncTypeSEG_FLEX_ABS_ABS SegmentSyncType = 4
)

var EnumNamesSegmentSyncType = map[SegmentSyncType]string{
	SegmentSyncTypeSEG_DEFAULT:      "SEG_DEFAULT",
	SegmentSyncTypeSEG_FLEX_REL_REL: "SEG_FLEX_REL_REL",
	SegmentSyncTypeSEG_FLEX_ABS_REL: "SEG_FLEX_ABS_REL",
	SegmentSyncTypeSEG_FLEX_REL_ABS: "SEG_FLEX_REL_ABS",
	SegmentSyncTypeSEG_FLEX_ABS_ABS: "SEG_FLEX_ABS_ABS",
}

var EnumValuesSegmentSyncType = map[string]SegmentSyncType{
	"SEG_DEFAULT":      SegmentSyncTypeSEG_DEFAULT,
	"SEG_FLEX_REL_REL": SegmentSyncTypeSEG_FLEX_REL_REL,
	"SEG_FLEX_ABS_REL": SegmentSyncTypeSEG_FLEX_ABS_REL,
	"SEG_FLEX_REL_ABS": SegmentSyncTypeSEG_FLEX_REL_ABS,
	"SEG_FLEX_ABS_ABS": SegmentSyncTypeSEG_FLEX_ABS_ABS,
}

func (v SegmentSyncType) String() string {
	if s, ok := EnumNamesSegmentSyncType[v]; ok {
		return s
	}
	return "SegmentSyncType(" + strconv.FormatInt(int64(v), 10) + ")"
}
