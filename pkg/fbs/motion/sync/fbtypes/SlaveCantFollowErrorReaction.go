// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import "strconv"

/// Definition of some possible error reaction, when the slave axis is sync'd, but can't follow the result of the calculation pipeline
type SlaveCantFollowErrorReaction int8

const (
	/// set the slave axis to error and decouple it from the master + create a diagnosis error
	SlaveCantFollowErrorReactionCREATE_ERROR      SlaveCantFollowErrorReaction = 0
	/// let the slave axis go back to unsync'd and use the chasing interpolator to follow
	SlaveCantFollowErrorReactionTRY_TO_RESYNC     SlaveCantFollowErrorReaction = 1
	/// keep the slave axis sync'd and exceed the axis limits
	SlaveCantFollowErrorReactionKEEP_SYNCHRONIZED SlaveCantFollowErrorReaction = 2
)

var EnumNamesSlaveCantFollowErrorReaction = map[SlaveCantFollowErrorReaction]string{
	SlaveCantFollowErrorReactionCREATE_ERROR:      "CREATE_ERROR",
	SlaveCantFollowErrorReactionTRY_TO_RESYNC:     "TRY_TO_RESYNC",
	SlaveCantFollowErrorReactionKEEP_SYNCHRONIZED: "KEEP_SYNCHRONIZED",
}

var EnumValuesSlaveCantFollowErrorReaction = map[string]SlaveCantFollowErrorReaction{
	"CREATE_ERROR":      SlaveCantFollowErrorReactionCREATE_ERROR,
	"TRY_TO_RESYNC":     SlaveCantFollowErrorReactionTRY_TO_RESYNC,
	"KEEP_SYNCHRONIZED": SlaveCantFollowErrorReactionKEEP_SYNCHRONIZED,
}

func (v SlaveCantFollowErrorReaction) String() string {
	if s, ok := EnumNamesSlaveCantFollowErrorReaction[v]; ok {
		return s
	}
	return "SlaveCantFollowErrorReaction(" + strconv.FormatInt(int64(v), 10) + ")"
}
