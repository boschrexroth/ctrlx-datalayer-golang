// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import "strconv"

/// type of the law
type SegmentLawType uint32

const (
	/// ctrlX, MLC, CamBuilder - Points-table with interpolation based on #points (0-100 Spline Interpolation, 101-... Linear Interpolation)
	SegmentLawTypeSEG_LAW_TABLE_AUTO       SegmentLawType = 0
	/// ctrlX, MLC, CamBuilder - Inclined sine curve
	/// ctrlX, MLC, CamBuilder - Polynomial 5th order
	SegmentLawTypeSEG_LAW_RR_POLY5         SegmentLawType = 256
	/// ctrlX, MLC, CamBuilder - Polynomial 5th order
	SegmentLawTypeSEG_LAW_RG_POLY5         SegmentLawType = 512
	/// ctrlX, MLC, CamBuilder - Polynomial 7th order
	SegmentLawTypeSEG_LAW_RG_POLY7         SegmentLawType = 768
	/// ctrlX, MLC, CamBuilder - Polynomial 5th order
	SegmentLawTypeSEG_LAW_GR_POLY5         SegmentLawType = 1024
	/// ctrlX, MLC, CamBuilder - Polynomial 7th order
	SegmentLawTypeSEG_LAW_GR_POLY7         SegmentLawType = 1280
	/// ctrlX, MLC, CamBuilder - Constant velocity
	SegmentLawTypeSEG_LAW_GG_LINEAR        SegmentLawType = 1536
	/// ctrlX, MLC, CamBuilder - Polynomial 5th order
	SegmentLawTypeSEG_LAW_GG_POLY5         SegmentLawType = 1792
	/// ctrlX, MLC, CamBuilder - Standstill
	SegmentLawTypeSEG_LAW_RR_LINEAR        SegmentLawType = 2048
	/// ctrlX, MLC, CamBuilder - Polynomial 7th order
	SegmentLawTypeSEG_LAW_RR_POLY7         SegmentLawType = 2304
	/// ctrlX, MLC, CamBuilder - Sine curve
	SegmentLawTypeSEG_LAW_RR_SINUS         SegmentLawType = 2560
	/// ctrlX, MLC, CamBuilder - Sinusoid of Gutman
	SegmentLawTypeSEG_LAW_RR_SINUSGUTMAN   SegmentLawType = 2816
	/// ctrlX, MLC, CamBuilder - Acceleration-optimal inclined sine curve
	SegmentLawTypeSEG_LAW_RR_SINUSACC      SegmentLawType = 3072
	/// ctrlX, MLC, CamBuilder - Torque-inclined sine curve
	SegmentLawTypeSEG_LAW_RR_SINUSTOR      SegmentLawType = 3328
	/// ctrlX, MLC, CamBuilder - Modified acceleration trapezoid
	SegmentLawTypeSEG_LAW_RR_MOD_TRAPEZ    SegmentLawType = 3584
	/// ctrlX, MLC, CamBuilder - Modified sine curve
	SegmentLawTypeSEG_LAW_RR_MOD_SIN       SegmentLawType = 3840
	/// ctrlX, MLC, CamBuilder - Polynomial 7th order
	SegmentLawTypeSEG_LAW_GG_POLY7         SegmentLawType = 4096
	/// ctrlX, MLC, CamBuilder - Modified sine curve
	SegmentLawTypeSEG_LAW_GG_MOD_SIN       SegmentLawType = 4352
	/// ctrlX, MLC, CamBuilder - Velocity-limited polynomial 5th order
	SegmentLawTypeSEG_LAW_RR_POLY5VLIM     SegmentLawType = 4608
	/// ctrlX, MLC, CamBuilder - Quadratic parabola
	SegmentLawTypeSEG_LAW_RR_PARABOLA      SegmentLawType = 4864
	/// ctrlX, MLC, CamBuilder - Polynomial 8th order
	SegmentLawTypeSEG_LAW_RR_POLY8         SegmentLawType = 5120
	/// ctrlX, MLC, CamBuilder - Polynomial 5th order
	SegmentLawTypeSEG_LAW_BB_POLY5         SegmentLawType = 8192
	/// ctrlX, MLC, CamBuilder - Polynomial 7th order
	SegmentLawTypeSEG_LAW_BB_POLY7         SegmentLawType = 8448
	/// RESERVED (not impl.)   - Polynomial 8th order
	SegmentLawTypeSEG_LAW_BB_POLY8         SegmentLawType = 8704
	/// EXPERIMENTAL (done)    - Modified acceleration trapezoid
	SegmentLawTypeSEG_LAW_RU_MOD_TRAPEZ    SegmentLawType = 12288
	/// EXPERIMENTAL (in work) - Harmonic combination
	SegmentLawTypeSEG_LAW_RU_HARMONIC      SegmentLawType = 12544
	/// EXPERIMENTAL (done)    - Modified acceleration trapezoid
	SegmentLawTypeSEG_LAW_UR_MOD_TRAPEZ    SegmentLawType = 12800
	/// EXPERIMENTAL (in work) - Harmonic combination
	SegmentLawTypeSEG_LAW_UR_HARMONIC      SegmentLawType = 13056
	/// EXPERIMENTAL (in work) - Harmonic combination
	SegmentLawTypeSEG_LAW_GU_HARMONIC      SegmentLawType = 13312
	/// EXPERIMENTAL (in work) - Harmonic combination
	SegmentLawTypeSEG_LAW_UG_HARMONIC      SegmentLawType = 13568
	/// EXPERIMENTAL (in work) - Sine
	SegmentLawTypeSEG_LAW_UU_SIN           SegmentLawType = 13824
	/// EXPERIMENTAL (in work) - Sine-linear-combination
	SegmentLawTypeSEG_LAW_UU_SINLIN        SegmentLawType = 14080
	/// ctrlX, MLC, CamBuilder - Polynomial 5th order
	SegmentLawTypeSEG_LAW_POLY5            SegmentLawType = 16384
	/// ctrlX, MLC, CamBuilder - Polynomial 7th order
	SegmentLawTypeSEG_LAW_POLY7            SegmentLawType = 16640
	/// ctrlX, MLC, CamBuilder - Polynomial 2nd order
	SegmentLawTypeSEG_LAW_POLY2            SegmentLawType = 16896
	/// ctrlX, MLC, CamBuilder - Polynomial 3rd order
	SegmentLawTypeSEG_LAW_POLY3            SegmentLawType = 17152
	/// ctrlX, MLC, CamBuilder - Polynomial 4th order
	SegmentLawTypeSEG_LAW_POLY4            SegmentLawType = 17408
	/// ctrlX, MLC, CamBuilder - Polynomial 8th order
	SegmentLawTypeSEG_LAW_POLY8            SegmentLawType = 17664
	/// IndraSize
	SegmentLawTypeSEG_LAW_POLY4_TYPE2      SegmentLawType = 17920
	/// IndraSize
	SegmentLawTypeSEG_LAW_POLY8_TYPE2      SegmentLawType = 18176
	/// ctrlX, MLC, CamBuilder - Acceleration-limited (trapezoid profile)
	SegmentLawTypeSEG_LAW_GG_VELTRAPEZ_ACC SegmentLawType = 20480
	/// EXPERIMENTAL (in work) - Velocity-limited (trapezoid profile)
	SegmentLawTypeSEG_LAW_GG_VELTRAPEZ_VEL SegmentLawType = 20736
	/// ctrlX, MLC, CamBuilder - Velocity-limited polynomial 5th order
	SegmentLawTypeSEG_LAW_BB_POLY5VLIM     SegmentLawType = 24576
	/// ctrlX, MLC, CamBuilder - Free of harmonics polynomial 5th order
	SegmentLawTypeSEG_LAW_BB_POLY5OSC      SegmentLawType = 24832
	/// ctrlX, MLC, CamBuilder - Acceleration-limited motion (trapezoid profile)
	SegmentLawTypeSEG_LAW_INT_ACC          SegmentLawType = 28672
	/// ctrlX, MLC, CamBuilder - Acceleration-limited motion (sinusoid profile)
	SegmentLawTypeSEG_LAW_INT_SIN          SegmentLawType = 28928
	/// ctrlX, MLC, CamBuilder - Jerk-limited motion
	SegmentLawTypeSEG_LAW_INT_JRK          SegmentLawType = 29184
	/// ctrlX, MLC, CamBuilder - Linear Acceleration
	SegmentLawTypeSEG_LAW_ACAM             SegmentLawType = 32768
	/// ctrlX, MLC, CamBuilder - Linear Velocity
	SegmentLawTypeSEG_LAW_VCAM             SegmentLawType = 33024
	/// ctrlX, MLC, CamBuilder - Velocity 2nd order (Start acceleration zero)
	SegmentLawTypeSEG_LAW_VCAM2_A          SegmentLawType = 33280
	/// ctrlX, MLC, CamBuilder - Velocity 2nd order (End acceleration zero)
	SegmentLawTypeSEG_LAW_VCAM2_B          SegmentLawType = 33536
	/// EXPERIMENTAL (in work) - Velocity and overshoot limited retract movement
	SegmentLawTypeSEG_LAW_SCALEDCAM        SegmentLawType = 33792
	///             CamBuilder - Points-table without interpolation
	SegmentLawTypeSEG_LAW_TABLE            SegmentLawType = 40960
	///             CamBuilder - Points-table with linear interpolation
	SegmentLawTypeSEG_LAW_TABLE_LIN        SegmentLawType = 41216
	///             CamBuilder - Points-table with spline interpolation
	SegmentLawTypeSEG_LAW_TABLE_SPLINE     SegmentLawType = 41472
	/// RESERVED (not impl.)
	SegmentLawTypeSEG_LAW_TABLE_SCALED     SegmentLawType = 41728
)

var EnumNamesSegmentLawType = map[SegmentLawType]string{
	SegmentLawTypeSEG_LAW_TABLE_AUTO:       "SEG_LAW_TABLE_AUTO",
	SegmentLawTypeSEG_LAW_RR_POLY5:         "SEG_LAW_RR_POLY5",
	SegmentLawTypeSEG_LAW_RG_POLY5:         "SEG_LAW_RG_POLY5",
	SegmentLawTypeSEG_LAW_RG_POLY7:         "SEG_LAW_RG_POLY7",
	SegmentLawTypeSEG_LAW_GR_POLY5:         "SEG_LAW_GR_POLY5",
	SegmentLawTypeSEG_LAW_GR_POLY7:         "SEG_LAW_GR_POLY7",
	SegmentLawTypeSEG_LAW_GG_LINEAR:        "SEG_LAW_GG_LINEAR",
	SegmentLawTypeSEG_LAW_GG_POLY5:         "SEG_LAW_GG_POLY5",
	SegmentLawTypeSEG_LAW_RR_LINEAR:        "SEG_LAW_RR_LINEAR",
	SegmentLawTypeSEG_LAW_RR_POLY7:         "SEG_LAW_RR_POLY7",
	SegmentLawTypeSEG_LAW_RR_SINUS:         "SEG_LAW_RR_SINUS",
	SegmentLawTypeSEG_LAW_RR_SINUSGUTMAN:   "SEG_LAW_RR_SINUSGUTMAN",
	SegmentLawTypeSEG_LAW_RR_SINUSACC:      "SEG_LAW_RR_SINUSACC",
	SegmentLawTypeSEG_LAW_RR_SINUSTOR:      "SEG_LAW_RR_SINUSTOR",
	SegmentLawTypeSEG_LAW_RR_MOD_TRAPEZ:    "SEG_LAW_RR_MOD_TRAPEZ",
	SegmentLawTypeSEG_LAW_RR_MOD_SIN:       "SEG_LAW_RR_MOD_SIN",
	SegmentLawTypeSEG_LAW_GG_POLY7:         "SEG_LAW_GG_POLY7",
	SegmentLawTypeSEG_LAW_GG_MOD_SIN:       "SEG_LAW_GG_MOD_SIN",
	SegmentLawTypeSEG_LAW_RR_POLY5VLIM:     "SEG_LAW_RR_POLY5VLIM",
	SegmentLawTypeSEG_LAW_RR_PARABOLA:      "SEG_LAW_RR_PARABOLA",
	SegmentLawTypeSEG_LAW_RR_POLY8:         "SEG_LAW_RR_POLY8",
	SegmentLawTypeSEG_LAW_BB_POLY5:         "SEG_LAW_BB_POLY5",
	SegmentLawTypeSEG_LAW_BB_POLY7:         "SEG_LAW_BB_POLY7",
	SegmentLawTypeSEG_LAW_BB_POLY8:         "SEG_LAW_BB_POLY8",
	SegmentLawTypeSEG_LAW_RU_MOD_TRAPEZ:    "SEG_LAW_RU_MOD_TRAPEZ",
	SegmentLawTypeSEG_LAW_RU_HARMONIC:      "SEG_LAW_RU_HARMONIC",
	SegmentLawTypeSEG_LAW_UR_MOD_TRAPEZ:    "SEG_LAW_UR_MOD_TRAPEZ",
	SegmentLawTypeSEG_LAW_UR_HARMONIC:      "SEG_LAW_UR_HARMONIC",
	SegmentLawTypeSEG_LAW_GU_HARMONIC:      "SEG_LAW_GU_HARMONIC",
	SegmentLawTypeSEG_LAW_UG_HARMONIC:      "SEG_LAW_UG_HARMONIC",
	SegmentLawTypeSEG_LAW_UU_SIN:           "SEG_LAW_UU_SIN",
	SegmentLawTypeSEG_LAW_UU_SINLIN:        "SEG_LAW_UU_SINLIN",
	SegmentLawTypeSEG_LAW_POLY5:            "SEG_LAW_POLY5",
	SegmentLawTypeSEG_LAW_POLY7:            "SEG_LAW_POLY7",
	SegmentLawTypeSEG_LAW_POLY2:            "SEG_LAW_POLY2",
	SegmentLawTypeSEG_LAW_POLY3:            "SEG_LAW_POLY3",
	SegmentLawTypeSEG_LAW_POLY4:            "SEG_LAW_POLY4",
	SegmentLawTypeSEG_LAW_POLY8:            "SEG_LAW_POLY8",
	SegmentLawTypeSEG_LAW_POLY4_TYPE2:      "SEG_LAW_POLY4_TYPE2",
	SegmentLawTypeSEG_LAW_POLY8_TYPE2:      "SEG_LAW_POLY8_TYPE2",
	SegmentLawTypeSEG_LAW_GG_VELTRAPEZ_ACC: "SEG_LAW_GG_VELTRAPEZ_ACC",
	SegmentLawTypeSEG_LAW_GG_VELTRAPEZ_VEL: "SEG_LAW_GG_VELTRAPEZ_VEL",
	SegmentLawTypeSEG_LAW_BB_POLY5VLIM:     "SEG_LAW_BB_POLY5VLIM",
	SegmentLawTypeSEG_LAW_BB_POLY5OSC:      "SEG_LAW_BB_POLY5OSC",
	SegmentLawTypeSEG_LAW_INT_ACC:          "SEG_LAW_INT_ACC",
	SegmentLawTypeSEG_LAW_INT_SIN:          "SEG_LAW_INT_SIN",
	SegmentLawTypeSEG_LAW_INT_JRK:          "SEG_LAW_INT_JRK",
	SegmentLawTypeSEG_LAW_ACAM:             "SEG_LAW_ACAM",
	SegmentLawTypeSEG_LAW_VCAM:             "SEG_LAW_VCAM",
	SegmentLawTypeSEG_LAW_VCAM2_A:          "SEG_LAW_VCAM2_A",
	SegmentLawTypeSEG_LAW_VCAM2_B:          "SEG_LAW_VCAM2_B",
	SegmentLawTypeSEG_LAW_SCALEDCAM:        "SEG_LAW_SCALEDCAM",
	SegmentLawTypeSEG_LAW_TABLE:            "SEG_LAW_TABLE",
	SegmentLawTypeSEG_LAW_TABLE_LIN:        "SEG_LAW_TABLE_LIN",
	SegmentLawTypeSEG_LAW_TABLE_SPLINE:     "SEG_LAW_TABLE_SPLINE",
	SegmentLawTypeSEG_LAW_TABLE_SCALED:     "SEG_LAW_TABLE_SCALED",
}

var EnumValuesSegmentLawType = map[string]SegmentLawType{
	"SEG_LAW_TABLE_AUTO":       SegmentLawTypeSEG_LAW_TABLE_AUTO,
	"SEG_LAW_RR_POLY5":         SegmentLawTypeSEG_LAW_RR_POLY5,
	"SEG_LAW_RG_POLY5":         SegmentLawTypeSEG_LAW_RG_POLY5,
	"SEG_LAW_RG_POLY7":         SegmentLawTypeSEG_LAW_RG_POLY7,
	"SEG_LAW_GR_POLY5":         SegmentLawTypeSEG_LAW_GR_POLY5,
	"SEG_LAW_GR_POLY7":         SegmentLawTypeSEG_LAW_GR_POLY7,
	"SEG_LAW_GG_LINEAR":        SegmentLawTypeSEG_LAW_GG_LINEAR,
	"SEG_LAW_GG_POLY5":         SegmentLawTypeSEG_LAW_GG_POLY5,
	"SEG_LAW_RR_LINEAR":        SegmentLawTypeSEG_LAW_RR_LINEAR,
	"SEG_LAW_RR_POLY7":         SegmentLawTypeSEG_LAW_RR_POLY7,
	"SEG_LAW_RR_SINUS":         SegmentLawTypeSEG_LAW_RR_SINUS,
	"SEG_LAW_RR_SINUSGUTMAN":   SegmentLawTypeSEG_LAW_RR_SINUSGUTMAN,
	"SEG_LAW_RR_SINUSACC":      SegmentLawTypeSEG_LAW_RR_SINUSACC,
	"SEG_LAW_RR_SINUSTOR":      SegmentLawTypeSEG_LAW_RR_SINUSTOR,
	"SEG_LAW_RR_MOD_TRAPEZ":    SegmentLawTypeSEG_LAW_RR_MOD_TRAPEZ,
	"SEG_LAW_RR_MOD_SIN":       SegmentLawTypeSEG_LAW_RR_MOD_SIN,
	"SEG_LAW_GG_POLY7":         SegmentLawTypeSEG_LAW_GG_POLY7,
	"SEG_LAW_GG_MOD_SIN":       SegmentLawTypeSEG_LAW_GG_MOD_SIN,
	"SEG_LAW_RR_POLY5VLIM":     SegmentLawTypeSEG_LAW_RR_POLY5VLIM,
	"SEG_LAW_RR_PARABOLA":      SegmentLawTypeSEG_LAW_RR_PARABOLA,
	"SEG_LAW_RR_POLY8":         SegmentLawTypeSEG_LAW_RR_POLY8,
	"SEG_LAW_BB_POLY5":         SegmentLawTypeSEG_LAW_BB_POLY5,
	"SEG_LAW_BB_POLY7":         SegmentLawTypeSEG_LAW_BB_POLY7,
	"SEG_LAW_BB_POLY8":         SegmentLawTypeSEG_LAW_BB_POLY8,
	"SEG_LAW_RU_MOD_TRAPEZ":    SegmentLawTypeSEG_LAW_RU_MOD_TRAPEZ,
	"SEG_LAW_RU_HARMONIC":      SegmentLawTypeSEG_LAW_RU_HARMONIC,
	"SEG_LAW_UR_MOD_TRAPEZ":    SegmentLawTypeSEG_LAW_UR_MOD_TRAPEZ,
	"SEG_LAW_UR_HARMONIC":      SegmentLawTypeSEG_LAW_UR_HARMONIC,
	"SEG_LAW_GU_HARMONIC":      SegmentLawTypeSEG_LAW_GU_HARMONIC,
	"SEG_LAW_UG_HARMONIC":      SegmentLawTypeSEG_LAW_UG_HARMONIC,
	"SEG_LAW_UU_SIN":           SegmentLawTypeSEG_LAW_UU_SIN,
	"SEG_LAW_UU_SINLIN":        SegmentLawTypeSEG_LAW_UU_SINLIN,
	"SEG_LAW_POLY5":            SegmentLawTypeSEG_LAW_POLY5,
	"SEG_LAW_POLY7":            SegmentLawTypeSEG_LAW_POLY7,
	"SEG_LAW_POLY2":            SegmentLawTypeSEG_LAW_POLY2,
	"SEG_LAW_POLY3":            SegmentLawTypeSEG_LAW_POLY3,
	"SEG_LAW_POLY4":            SegmentLawTypeSEG_LAW_POLY4,
	"SEG_LAW_POLY8":            SegmentLawTypeSEG_LAW_POLY8,
	"SEG_LAW_POLY4_TYPE2":      SegmentLawTypeSEG_LAW_POLY4_TYPE2,
	"SEG_LAW_POLY8_TYPE2":      SegmentLawTypeSEG_LAW_POLY8_TYPE2,
	"SEG_LAW_GG_VELTRAPEZ_ACC": SegmentLawTypeSEG_LAW_GG_VELTRAPEZ_ACC,
	"SEG_LAW_GG_VELTRAPEZ_VEL": SegmentLawTypeSEG_LAW_GG_VELTRAPEZ_VEL,
	"SEG_LAW_BB_POLY5VLIM":     SegmentLawTypeSEG_LAW_BB_POLY5VLIM,
	"SEG_LAW_BB_POLY5OSC":      SegmentLawTypeSEG_LAW_BB_POLY5OSC,
	"SEG_LAW_INT_ACC":          SegmentLawTypeSEG_LAW_INT_ACC,
	"SEG_LAW_INT_SIN":          SegmentLawTypeSEG_LAW_INT_SIN,
	"SEG_LAW_INT_JRK":          SegmentLawTypeSEG_LAW_INT_JRK,
	"SEG_LAW_ACAM":             SegmentLawTypeSEG_LAW_ACAM,
	"SEG_LAW_VCAM":             SegmentLawTypeSEG_LAW_VCAM,
	"SEG_LAW_VCAM2_A":          SegmentLawTypeSEG_LAW_VCAM2_A,
	"SEG_LAW_VCAM2_B":          SegmentLawTypeSEG_LAW_VCAM2_B,
	"SEG_LAW_SCALEDCAM":        SegmentLawTypeSEG_LAW_SCALEDCAM,
	"SEG_LAW_TABLE":            SegmentLawTypeSEG_LAW_TABLE,
	"SEG_LAW_TABLE_LIN":        SegmentLawTypeSEG_LAW_TABLE_LIN,
	"SEG_LAW_TABLE_SPLINE":     SegmentLawTypeSEG_LAW_TABLE_SPLINE,
	"SEG_LAW_TABLE_SCALED":     SegmentLawTypeSEG_LAW_TABLE_SCALED,
}

func (v SegmentLawType) String() string {
	if s, ok := EnumNamesSegmentLawType[v]; ok {
		return s
	}
	return "SegmentLawType(" + strconv.FormatInt(int64(v), 10) + ")"
}
