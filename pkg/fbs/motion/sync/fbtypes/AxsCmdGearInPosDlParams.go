// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// GearInPos calculation pipeline parameters, that are stored in the Datalayer RT, for the axis GearInPosEx command
type AxsCmdGearInPosDlParamsT struct {
	SoiMasterOffsetDlIdx int32 `json:"soiMasterOffsetDlIdx"`
	SoiMasterOffsetVelDlIdx int32 `json:"soiMasterOffsetVelDlIdx"`
	SoiMasterOffsetAccDlIdx int32 `json:"soiMasterOffsetAccDlIdx"`
	SoiSlaveOffsetDlIdx int32 `json:"soiSlaveOffsetDlIdx"`
	SoiSlaveOffsetVelDlIdx int32 `json:"soiSlaveOffsetVelDlIdx"`
	SoiSlaveOffsetAccDlIdx int32 `json:"soiSlaveOffsetAccDlIdx"`
	FofMasterOffsetDlIdx int32 `json:"fofMasterOffsetDlIdx"`
	FofMasterOffsetTimeConstantDlIdx int32 `json:"fofMasterOffsetTimeConstantDlIdx"`
	FofSlaveOffsetDlIdx int32 `json:"fofSlaveOffsetDlIdx"`
	FofSlaveOffsetTimeConstantDlIdx int32 `json:"fofSlaveOffsetTimeConstantDlIdx"`
	FineAdjustDlIdx int32 `json:"fineAdjustDlIdx"`
}

func (t *AxsCmdGearInPosDlParamsT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	AxsCmdGearInPosDlParamsStart(builder)
	AxsCmdGearInPosDlParamsAddSoiMasterOffsetDlIdx(builder, t.SoiMasterOffsetDlIdx)
	AxsCmdGearInPosDlParamsAddSoiMasterOffsetVelDlIdx(builder, t.SoiMasterOffsetVelDlIdx)
	AxsCmdGearInPosDlParamsAddSoiMasterOffsetAccDlIdx(builder, t.SoiMasterOffsetAccDlIdx)
	AxsCmdGearInPosDlParamsAddSoiSlaveOffsetDlIdx(builder, t.SoiSlaveOffsetDlIdx)
	AxsCmdGearInPosDlParamsAddSoiSlaveOffsetVelDlIdx(builder, t.SoiSlaveOffsetVelDlIdx)
	AxsCmdGearInPosDlParamsAddSoiSlaveOffsetAccDlIdx(builder, t.SoiSlaveOffsetAccDlIdx)
	AxsCmdGearInPosDlParamsAddFofMasterOffsetDlIdx(builder, t.FofMasterOffsetDlIdx)
	AxsCmdGearInPosDlParamsAddFofMasterOffsetTimeConstantDlIdx(builder, t.FofMasterOffsetTimeConstantDlIdx)
	AxsCmdGearInPosDlParamsAddFofSlaveOffsetDlIdx(builder, t.FofSlaveOffsetDlIdx)
	AxsCmdGearInPosDlParamsAddFofSlaveOffsetTimeConstantDlIdx(builder, t.FofSlaveOffsetTimeConstantDlIdx)
	AxsCmdGearInPosDlParamsAddFineAdjustDlIdx(builder, t.FineAdjustDlIdx)
	return AxsCmdGearInPosDlParamsEnd(builder)
}

func (rcv *AxsCmdGearInPosDlParams) UnPackTo(t *AxsCmdGearInPosDlParamsT) {
	t.SoiMasterOffsetDlIdx = rcv.SoiMasterOffsetDlIdx()
	t.SoiMasterOffsetVelDlIdx = rcv.SoiMasterOffsetVelDlIdx()
	t.SoiMasterOffsetAccDlIdx = rcv.SoiMasterOffsetAccDlIdx()
	t.SoiSlaveOffsetDlIdx = rcv.SoiSlaveOffsetDlIdx()
	t.SoiSlaveOffsetVelDlIdx = rcv.SoiSlaveOffsetVelDlIdx()
	t.SoiSlaveOffsetAccDlIdx = rcv.SoiSlaveOffsetAccDlIdx()
	t.FofMasterOffsetDlIdx = rcv.FofMasterOffsetDlIdx()
	t.FofMasterOffsetTimeConstantDlIdx = rcv.FofMasterOffsetTimeConstantDlIdx()
	t.FofSlaveOffsetDlIdx = rcv.FofSlaveOffsetDlIdx()
	t.FofSlaveOffsetTimeConstantDlIdx = rcv.FofSlaveOffsetTimeConstantDlIdx()
	t.FineAdjustDlIdx = rcv.FineAdjustDlIdx()
}

func (rcv *AxsCmdGearInPosDlParams) UnPack() *AxsCmdGearInPosDlParamsT {
	if rcv == nil { return nil }
	t := &AxsCmdGearInPosDlParamsT{}
	rcv.UnPackTo(t)
	return t
}

type AxsCmdGearInPosDlParams struct {
	_tab flatbuffers.Table
}

func GetRootAsAxsCmdGearInPosDlParams(buf []byte, offset flatbuffers.UOffsetT) *AxsCmdGearInPosDlParams {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &AxsCmdGearInPosDlParams{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsAxsCmdGearInPosDlParams(buf []byte, offset flatbuffers.UOffsetT) *AxsCmdGearInPosDlParams {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &AxsCmdGearInPosDlParams{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *AxsCmdGearInPosDlParams) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *AxsCmdGearInPosDlParams) Table() flatbuffers.Table {
	return rcv._tab
}

/// data layer index of master offset target value, second order interpolated
func (rcv *AxsCmdGearInPosDlParams) SoiMasterOffsetDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of master offset target value, second order interpolated
func (rcv *AxsCmdGearInPosDlParams) MutateSoiMasterOffsetDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(4, n)
}

/// data layer index of master offset velocity constraint for second order interpolation
func (rcv *AxsCmdGearInPosDlParams) SoiMasterOffsetVelDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of master offset velocity constraint for second order interpolation
func (rcv *AxsCmdGearInPosDlParams) MutateSoiMasterOffsetVelDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(6, n)
}

/// data layer index of master offset acceleration constraint for second order interpolation
func (rcv *AxsCmdGearInPosDlParams) SoiMasterOffsetAccDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of master offset acceleration constraint for second order interpolation
func (rcv *AxsCmdGearInPosDlParams) MutateSoiMasterOffsetAccDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(8, n)
}

/// data layer index of slave offset target value, second order interpolated
func (rcv *AxsCmdGearInPosDlParams) SoiSlaveOffsetDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of slave offset target value, second order interpolated
func (rcv *AxsCmdGearInPosDlParams) MutateSoiSlaveOffsetDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(10, n)
}

/// data layer index of slave offset velocity constraint for second order interpolation
func (rcv *AxsCmdGearInPosDlParams) SoiSlaveOffsetVelDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of slave offset velocity constraint for second order interpolation
func (rcv *AxsCmdGearInPosDlParams) MutateSoiSlaveOffsetVelDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(12, n)
}

/// data layer index of slave offset acceleration constraint for second order interpolation
func (rcv *AxsCmdGearInPosDlParams) SoiSlaveOffsetAccDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of slave offset acceleration constraint for second order interpolation
func (rcv *AxsCmdGearInPosDlParams) MutateSoiSlaveOffsetAccDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(14, n)
}

/// data layer index of second master offset, first order filtered
func (rcv *AxsCmdGearInPosDlParams) FofMasterOffsetDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of second master offset, first order filtered
func (rcv *AxsCmdGearInPosDlParams) MutateFofMasterOffsetDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(16, n)
}

/// data layer index of time constant for change rate of fofMasterOffset
func (rcv *AxsCmdGearInPosDlParams) FofMasterOffsetTimeConstantDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of time constant for change rate of fofMasterOffset
func (rcv *AxsCmdGearInPosDlParams) MutateFofMasterOffsetTimeConstantDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(18, n)
}

/// data layer index of second slave offset, first order filtered
func (rcv *AxsCmdGearInPosDlParams) FofSlaveOffsetDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of second slave offset, first order filtered
func (rcv *AxsCmdGearInPosDlParams) MutateFofSlaveOffsetDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(20, n)
}

/// data layer index of time constant for change rate of fofSlaveOffset
func (rcv *AxsCmdGearInPosDlParams) FofSlaveOffsetTimeConstantDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(22))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of time constant for change rate of fofSlaveOffset
func (rcv *AxsCmdGearInPosDlParams) MutateFofSlaveOffsetTimeConstantDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(22, n)
}

/// data layer index of fine adjust percentage in addition to the commanded fine adjust
func (rcv *AxsCmdGearInPosDlParams) FineAdjustDlIdx() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(24))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return -1
}

/// data layer index of fine adjust percentage in addition to the commanded fine adjust
func (rcv *AxsCmdGearInPosDlParams) MutateFineAdjustDlIdx(n int32) bool {
	return rcv._tab.MutateInt32Slot(24, n)
}

func AxsCmdGearInPosDlParamsStart(builder *flatbuffers.Builder) {
	builder.StartObject(11)
}
func AxsCmdGearInPosDlParamsAddSoiMasterOffsetDlIdx(builder *flatbuffers.Builder, soiMasterOffsetDlIdx int32) {
	builder.PrependInt32Slot(0, soiMasterOffsetDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddSoiMasterOffsetVelDlIdx(builder *flatbuffers.Builder, soiMasterOffsetVelDlIdx int32) {
	builder.PrependInt32Slot(1, soiMasterOffsetVelDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddSoiMasterOffsetAccDlIdx(builder *flatbuffers.Builder, soiMasterOffsetAccDlIdx int32) {
	builder.PrependInt32Slot(2, soiMasterOffsetAccDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddSoiSlaveOffsetDlIdx(builder *flatbuffers.Builder, soiSlaveOffsetDlIdx int32) {
	builder.PrependInt32Slot(3, soiSlaveOffsetDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddSoiSlaveOffsetVelDlIdx(builder *flatbuffers.Builder, soiSlaveOffsetVelDlIdx int32) {
	builder.PrependInt32Slot(4, soiSlaveOffsetVelDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddSoiSlaveOffsetAccDlIdx(builder *flatbuffers.Builder, soiSlaveOffsetAccDlIdx int32) {
	builder.PrependInt32Slot(5, soiSlaveOffsetAccDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddFofMasterOffsetDlIdx(builder *flatbuffers.Builder, fofMasterOffsetDlIdx int32) {
	builder.PrependInt32Slot(6, fofMasterOffsetDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddFofMasterOffsetTimeConstantDlIdx(builder *flatbuffers.Builder, fofMasterOffsetTimeConstantDlIdx int32) {
	builder.PrependInt32Slot(7, fofMasterOffsetTimeConstantDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddFofSlaveOffsetDlIdx(builder *flatbuffers.Builder, fofSlaveOffsetDlIdx int32) {
	builder.PrependInt32Slot(8, fofSlaveOffsetDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddFofSlaveOffsetTimeConstantDlIdx(builder *flatbuffers.Builder, fofSlaveOffsetTimeConstantDlIdx int32) {
	builder.PrependInt32Slot(9, fofSlaveOffsetTimeConstantDlIdx, -1)
}
func AxsCmdGearInPosDlParamsAddFineAdjustDlIdx(builder *flatbuffers.Builder, fineAdjustDlIdx int32) {
	builder.PrependInt32Slot(10, fineAdjustDlIdx, -1)
}
func AxsCmdGearInPosDlParamsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
