// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbtypes

import "strconv"

/// sync command mode (must fit the enum class motion::sync::cmd::SyncCmdMode)
type SyncCmdMode int8

const (
	/// The slave is moved relative and the calculation pipeline is initialized new.
	SyncCmdModeCMDMODE_SLAVE_RELATIVE_INIT       SyncCmdMode = 0
	/// The slave is moved relative and the calculation pipeline keeps its state.
	SyncCmdModeCMDMODE_SLAVE_RELATIVE_KEEP_STATE SyncCmdMode = 1
	/// The slave is moved absolute and the calculation pipeline is initialized new.
	SyncCmdModeCMDMODE_SLAVE_ABSOLUTE_INIT       SyncCmdMode = 2
	/// The slave is moved absolute and the calculation pipeline keeps its state.
	SyncCmdModeCMDMODE_SLAVE_ABSOLUTE_KEEP_STATE SyncCmdMode = 3
)

var EnumNamesSyncCmdMode = map[SyncCmdMode]string{
	SyncCmdModeCMDMODE_SLAVE_RELATIVE_INIT:       "CMDMODE_SLAVE_RELATIVE_INIT",
	SyncCmdModeCMDMODE_SLAVE_RELATIVE_KEEP_STATE: "CMDMODE_SLAVE_RELATIVE_KEEP_STATE",
	SyncCmdModeCMDMODE_SLAVE_ABSOLUTE_INIT:       "CMDMODE_SLAVE_ABSOLUTE_INIT",
	SyncCmdModeCMDMODE_SLAVE_ABSOLUTE_KEEP_STATE: "CMDMODE_SLAVE_ABSOLUTE_KEEP_STATE",
}

var EnumValuesSyncCmdMode = map[string]SyncCmdMode{
	"CMDMODE_SLAVE_RELATIVE_INIT":       SyncCmdModeCMDMODE_SLAVE_RELATIVE_INIT,
	"CMDMODE_SLAVE_RELATIVE_KEEP_STATE": SyncCmdModeCMDMODE_SLAVE_RELATIVE_KEEP_STATE,
	"CMDMODE_SLAVE_ABSOLUTE_INIT":       SyncCmdModeCMDMODE_SLAVE_ABSOLUTE_INIT,
	"CMDMODE_SLAVE_ABSOLUTE_KEEP_STATE": SyncCmdModeCMDMODE_SLAVE_ABSOLUTE_KEEP_STATE,
}

func (v SyncCmdMode) String() string {
	if s, ok := EnumNamesSyncCmdMode[v]; ok {
		return s
	}
	return "SyncCmdMode(" + strconv.FormatInt(int64(v), 10) + ")"
}
