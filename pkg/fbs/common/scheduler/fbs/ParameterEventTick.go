// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbs

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// Parameter transfered to a callable during tick event call (SchedEventType::SCHED_EVENT_TICK)
type ParameterEventTickT struct {
	CalculatedStartTime uint64 `json:"calculatedStartTime"`
}

func (t *ParameterEventTickT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	ParameterEventTickStart(builder)
	ParameterEventTickAddCalculatedStartTime(builder, t.CalculatedStartTime)
	return ParameterEventTickEnd(builder)
}

func (rcv *ParameterEventTick) UnPackTo(t *ParameterEventTickT) {
	t.CalculatedStartTime = rcv.CalculatedStartTime()
}

func (rcv *ParameterEventTick) UnPack() *ParameterEventTickT {
	if rcv == nil { return nil }
	t := &ParameterEventTickT{}
	rcv.UnPackTo(t)
	return t
}

type ParameterEventTick struct {
	_tab flatbuffers.Table
}

func GetRootAsParameterEventTick(buf []byte, offset flatbuffers.UOffsetT) *ParameterEventTick {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ParameterEventTick{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsParameterEventTick(buf []byte, offset flatbuffers.UOffsetT) *ParameterEventTick {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ParameterEventTick{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *ParameterEventTick) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ParameterEventTick) Table() flatbuffers.Table {
	return rcv._tab
}

/// Calculated start time of task where the callable is executed
func (rcv *ParameterEventTick) CalculatedStartTime() uint64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint64(o + rcv._tab.Pos)
	}
	return 0
}

/// Calculated start time of task where the callable is executed
func (rcv *ParameterEventTick) MutateCalculatedStartTime(n uint64) bool {
	return rcv._tab.MutateUint64Slot(4, n)
}

func ParameterEventTickStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func ParameterEventTickAddCalculatedStartTime(builder *flatbuffers.Builder, calculatedStartTime uint64) {
	builder.PrependUint64Slot(0, calculatedStartTime, 0)
}
func ParameterEventTickEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
