// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package builtin

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type BooleanVariantT struct {
	Value bool `json:"value"`
}

func (t *BooleanVariantT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	BooleanVariantStart(builder)
	BooleanVariantAddValue(builder, t.Value)
	return BooleanVariantEnd(builder)
}

func (rcv *BooleanVariant) UnPackTo(t *BooleanVariantT) {
	t.Value = rcv.Value()
}

func (rcv *BooleanVariant) UnPack() *BooleanVariantT {
	if rcv == nil { return nil }
	t := &BooleanVariantT{}
	rcv.UnPackTo(t)
	return t
}

type BooleanVariant struct {
	_tab flatbuffers.Table
}

func GetRootAsBooleanVariant(buf []byte, offset flatbuffers.UOffsetT) *BooleanVariant {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &BooleanVariant{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsBooleanVariant(buf []byte, offset flatbuffers.UOffsetT) *BooleanVariant {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &BooleanVariant{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *BooleanVariant) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *BooleanVariant) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *BooleanVariant) Value() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *BooleanVariant) MutateValue(n bool) bool {
	return rcv._tab.MutateBoolSlot(4, n)
}

func BooleanVariantStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func BooleanVariantAddValue(builder *flatbuffers.Builder, value bool) {
	builder.PrependBoolSlot(0, value, false)
}
func BooleanVariantEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
