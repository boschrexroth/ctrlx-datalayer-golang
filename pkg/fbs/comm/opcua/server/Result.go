// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package server

import "strconv"

type Result int8

const (
	ResultGood              Result = 0
	/// sourceNodeId from datalayer is not valid
	ResultInvalidSource     Result = 1
	/// targetNodeId is not present in server addressspace
	ResultInvalidTarget     Result = 2
	/// targetNodeId is used multiple times in the mapping tables
	ResultTargetAlreadyUsed Result = 3
	/// Coultn't load the type definition of the targetNodeId from companion model
	ResultTypeInvalid       Result = 4
	/// sourceNodeId and targetNodeId have different datatypes, only checked if 'typeSafety' is true
	ResultTypeMismatch      Result = 5
)

var EnumNamesResult = map[Result]string{
	ResultGood:              "Good",
	ResultInvalidSource:     "InvalidSource",
	ResultInvalidTarget:     "InvalidTarget",
	ResultTargetAlreadyUsed: "TargetAlreadyUsed",
	ResultTypeInvalid:       "TypeInvalid",
	ResultTypeMismatch:      "TypeMismatch",
}

var EnumValuesResult = map[string]Result{
	"Good":              ResultGood,
	"InvalidSource":     ResultInvalidSource,
	"InvalidTarget":     ResultInvalidTarget,
	"TargetAlreadyUsed": ResultTargetAlreadyUsed,
	"TypeInvalid":       ResultTypeInvalid,
	"TypeMismatch":      ResultTypeMismatch,
}

func (v Result) String() string {
	if s, ok := EnumNamesResult[v]; ok {
		return s
	}
	return "Result(" + strconv.FormatInt(int64(v), 10) + ")"
}
