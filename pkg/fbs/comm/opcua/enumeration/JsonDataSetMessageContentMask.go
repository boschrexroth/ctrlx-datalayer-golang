// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package enumeration

import "strconv"

type JsonDataSetMessageContentMask uint32

const (
	JsonDataSetMessageContentMaskDataSetWriterId         JsonDataSetMessageContentMask = 1
	JsonDataSetMessageContentMaskMetaDataVersion         JsonDataSetMessageContentMask = 2
	JsonDataSetMessageContentMaskSequenceNumber          JsonDataSetMessageContentMask = 4
	JsonDataSetMessageContentMaskTimestamp               JsonDataSetMessageContentMask = 8
	JsonDataSetMessageContentMaskStatus                  JsonDataSetMessageContentMask = 16
	JsonDataSetMessageContentMaskMessageType             JsonDataSetMessageContentMask = 32
	JsonDataSetMessageContentMaskDataSetWriterName       JsonDataSetMessageContentMask = 64
	JsonDataSetMessageContentMaskReversibleFieldEncoding JsonDataSetMessageContentMask = 128
	JsonDataSetMessageContentMaskPublisherId             JsonDataSetMessageContentMask = 256
	JsonDataSetMessageContentMaskWriterGroupName         JsonDataSetMessageContentMask = 512
	JsonDataSetMessageContentMaskMinorVersion            JsonDataSetMessageContentMask = 1024
)

var EnumNamesJsonDataSetMessageContentMask = map[JsonDataSetMessageContentMask]string{
	JsonDataSetMessageContentMaskDataSetWriterId:         "DataSetWriterId",
	JsonDataSetMessageContentMaskMetaDataVersion:         "MetaDataVersion",
	JsonDataSetMessageContentMaskSequenceNumber:          "SequenceNumber",
	JsonDataSetMessageContentMaskTimestamp:               "Timestamp",
	JsonDataSetMessageContentMaskStatus:                  "Status",
	JsonDataSetMessageContentMaskMessageType:             "MessageType",
	JsonDataSetMessageContentMaskDataSetWriterName:       "DataSetWriterName",
	JsonDataSetMessageContentMaskReversibleFieldEncoding: "ReversibleFieldEncoding",
	JsonDataSetMessageContentMaskPublisherId:             "PublisherId",
	JsonDataSetMessageContentMaskWriterGroupName:         "WriterGroupName",
	JsonDataSetMessageContentMaskMinorVersion:            "MinorVersion",
}

var EnumValuesJsonDataSetMessageContentMask = map[string]JsonDataSetMessageContentMask{
	"DataSetWriterId":         JsonDataSetMessageContentMaskDataSetWriterId,
	"MetaDataVersion":         JsonDataSetMessageContentMaskMetaDataVersion,
	"SequenceNumber":          JsonDataSetMessageContentMaskSequenceNumber,
	"Timestamp":               JsonDataSetMessageContentMaskTimestamp,
	"Status":                  JsonDataSetMessageContentMaskStatus,
	"MessageType":             JsonDataSetMessageContentMaskMessageType,
	"DataSetWriterName":       JsonDataSetMessageContentMaskDataSetWriterName,
	"ReversibleFieldEncoding": JsonDataSetMessageContentMaskReversibleFieldEncoding,
	"PublisherId":             JsonDataSetMessageContentMaskPublisherId,
	"WriterGroupName":         JsonDataSetMessageContentMaskWriterGroupName,
	"MinorVersion":            JsonDataSetMessageContentMaskMinorVersion,
}

func (v JsonDataSetMessageContentMask) String() string {
	if s, ok := EnumNamesJsonDataSetMessageContentMask[v]; ok {
		return s
	}
	return "JsonDataSetMessageContentMask(" + strconv.FormatInt(int64(v), 10) + ")"
}
