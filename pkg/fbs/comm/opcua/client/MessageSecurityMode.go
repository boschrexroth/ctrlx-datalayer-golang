// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package client

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type MessageSecurityModeT struct {
	MessageSecurityMode EnumMessageSecurityMode `json:"messageSecurityMode"`
}

func (t *MessageSecurityModeT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	MessageSecurityModeStart(builder)
	MessageSecurityModeAddMessageSecurityMode(builder, t.MessageSecurityMode)
	return MessageSecurityModeEnd(builder)
}

func (rcv *MessageSecurityMode) UnPackTo(t *MessageSecurityModeT) {
	t.MessageSecurityMode = rcv.MessageSecurityMode()
}

func (rcv *MessageSecurityMode) UnPack() *MessageSecurityModeT {
	if rcv == nil { return nil }
	t := &MessageSecurityModeT{}
	rcv.UnPackTo(t)
	return t
}

type MessageSecurityMode struct {
	_tab flatbuffers.Table
}

func GetRootAsMessageSecurityMode(buf []byte, offset flatbuffers.UOffsetT) *MessageSecurityMode {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &MessageSecurityMode{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsMessageSecurityMode(buf []byte, offset flatbuffers.UOffsetT) *MessageSecurityMode {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &MessageSecurityMode{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *MessageSecurityMode) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *MessageSecurityMode) Table() flatbuffers.Table {
	return rcv._tab
}

/// default is BESTAVAILABLE this determines and uses the most secure method automatically
func (rcv *MessageSecurityMode) MessageSecurityMode() EnumMessageSecurityMode {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return EnumMessageSecurityMode(rcv._tab.GetInt8(o + rcv._tab.Pos))
	}
	return 0
}

/// default is BESTAVAILABLE this determines and uses the most secure method automatically
func (rcv *MessageSecurityMode) MutateMessageSecurityMode(n EnumMessageSecurityMode) bool {
	return rcv._tab.MutateInt8Slot(4, int8(n))
}

func MessageSecurityModeStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func MessageSecurityModeAddMessageSecurityMode(builder *flatbuffers.Builder, messageSecurityMode EnumMessageSecurityMode) {
	builder.PrependInt8Slot(0, int8(messageSecurityMode), 0)
}
func MessageSecurityModeEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
