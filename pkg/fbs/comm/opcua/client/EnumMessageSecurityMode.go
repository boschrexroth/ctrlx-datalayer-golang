// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package client

import "strconv"

type EnumMessageSecurityMode int8

const (
	/// Determines and uses the most secure method automatically
	EnumMessageSecurityModeBESTAVAILABLE EnumMessageSecurityMode = 0
	/// Unencrypted connection (only together with the security policy "None")
	EnumMessageSecurityModeNONE          EnumMessageSecurityMode = 1
	/// Signed connection
	EnumMessageSecurityModeSIGN          EnumMessageSecurityMode = 2
	/// Signed and encrypted connection
	EnumMessageSecurityModeSIGNENCRYPT   EnumMessageSecurityMode = 3
)

var EnumNamesEnumMessageSecurityMode = map[EnumMessageSecurityMode]string{
	EnumMessageSecurityModeBESTAVAILABLE: "BESTAVAILABLE",
	EnumMessageSecurityModeNONE:          "NONE",
	EnumMessageSecurityModeSIGN:          "SIGN",
	EnumMessageSecurityModeSIGNENCRYPT:   "SIGNENCRYPT",
}

var EnumValuesEnumMessageSecurityMode = map[string]EnumMessageSecurityMode{
	"BESTAVAILABLE": EnumMessageSecurityModeBESTAVAILABLE,
	"NONE":          EnumMessageSecurityModeNONE,
	"SIGN":          EnumMessageSecurityModeSIGN,
	"SIGNENCRYPT":   EnumMessageSecurityModeSIGNENCRYPT,
}

func (v EnumMessageSecurityMode) String() string {
	if s, ok := EnumNamesEnumMessageSecurityMode[v]; ok {
		return s
	}
	return "EnumMessageSecurityMode(" + strconv.FormatInt(int64(v), 10) + ")"
}
