// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package client

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ClientConfiguration struct {
	_tab flatbuffers.Table
}

func GetRootAsClientConfiguration(buf []byte, offset flatbuffers.UOffsetT) *ClientConfiguration {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ClientConfiguration{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsClientConfiguration(buf []byte, offset flatbuffers.UOffsetT) *ClientConfiguration {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ClientConfiguration{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *ClientConfiguration) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ClientConfiguration) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ClientConfiguration) Name() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ClientConfiguration) EndpointUrl() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ClientConfiguration) SessionConfiguration(obj *SessionConfiguration) *SessionConfiguration {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(SessionConfiguration)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *ClientConfiguration) TimeoutConfiguration(obj *TimeoutConfiguration) *TimeoutConfiguration {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(TimeoutConfiguration)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func ClientConfigurationStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func ClientConfigurationAddName(builder *flatbuffers.Builder, name flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(name), 0)
}
func ClientConfigurationAddEndpointUrl(builder *flatbuffers.Builder, endpointUrl flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(endpointUrl), 0)
}
func ClientConfigurationAddSessionConfiguration(builder *flatbuffers.Builder, sessionConfiguration flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(sessionConfiguration), 0)
}
func ClientConfigurationAddTimeoutConfiguration(builder *flatbuffers.Builder, timeoutConfiguration flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(timeoutConfiguration), 0)
}
func ClientConfigurationEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
