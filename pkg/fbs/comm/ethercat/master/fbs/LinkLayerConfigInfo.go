// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbs

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type LinkLayerConfigInfoT struct {
	Response *LinkLayerConfigInfoResponseT
}

func (t *LinkLayerConfigInfoT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	responseOffset := t.Response.Pack(builder)
	LinkLayerConfigInfoStart(builder)
	LinkLayerConfigInfoAddResponse(builder, responseOffset)
	return LinkLayerConfigInfoEnd(builder)
}

func (rcv *LinkLayerConfigInfo) UnPackTo(t *LinkLayerConfigInfoT) {
	t.Response = rcv.Response(nil).UnPack()
}

func (rcv *LinkLayerConfigInfo) UnPack() *LinkLayerConfigInfoT {
	if rcv == nil { return nil }
	t := &LinkLayerConfigInfoT{}
	rcv.UnPackTo(t)
	return t
}

type LinkLayerConfigInfo struct {
	_tab flatbuffers.Table
}

func GetRootAsLinkLayerConfigInfo(buf []byte, offset flatbuffers.UOffsetT) *LinkLayerConfigInfo {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &LinkLayerConfigInfo{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsLinkLayerConfigInfo(buf []byte, offset flatbuffers.UOffsetT) *LinkLayerConfigInfo {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &LinkLayerConfigInfo{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *LinkLayerConfigInfo) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *LinkLayerConfigInfo) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *LinkLayerConfigInfo) Response(obj *LinkLayerConfigInfoResponse) *LinkLayerConfigInfoResponse {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(LinkLayerConfigInfoResponse)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func LinkLayerConfigInfoStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func LinkLayerConfigInfoAddResponse(builder *flatbuffers.Builder, response flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(response), 0)
}
func LinkLayerConfigInfoEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
