// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbs

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type PortErrorCounters struct {
	_tab flatbuffers.Struct
}

func (rcv *PortErrorCounters) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *PortErrorCounters) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *PortErrorCounters) InvalidFrameCounter() byte {
	return rcv._tab.GetByte(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *PortErrorCounters) MutateInvalidFrameCounter(n byte) bool {
	return rcv._tab.MutateByte(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *PortErrorCounters) RxErrorCounter() byte {
	return rcv._tab.GetByte(rcv._tab.Pos + flatbuffers.UOffsetT(1))
}
func (rcv *PortErrorCounters) MutateRxErrorCounter(n byte) bool {
	return rcv._tab.MutateByte(rcv._tab.Pos+flatbuffers.UOffsetT(1), n)
}

func (rcv *PortErrorCounters) FwdRxErrorCounter() byte {
	return rcv._tab.GetByte(rcv._tab.Pos + flatbuffers.UOffsetT(2))
}
func (rcv *PortErrorCounters) MutateFwdRxErrorCounter(n byte) bool {
	return rcv._tab.MutateByte(rcv._tab.Pos+flatbuffers.UOffsetT(2), n)
}

func (rcv *PortErrorCounters) LostLinkCounter() byte {
	return rcv._tab.GetByte(rcv._tab.Pos + flatbuffers.UOffsetT(3))
}
func (rcv *PortErrorCounters) MutateLostLinkCounter(n byte) bool {
	return rcv._tab.MutateByte(rcv._tab.Pos+flatbuffers.UOffsetT(3), n)
}

func CreatePortErrorCounters(builder *flatbuffers.Builder, invalidFrameCounter byte, rxErrorCounter byte, fwdRxErrorCounter byte, lostLinkCounter byte) flatbuffers.UOffsetT {
	builder.Prep(1, 4)
	builder.PrependByte(lostLinkCounter)
	builder.PrependByte(fwdRxErrorCounter)
	builder.PrependByte(rxErrorCounter)
	builder.PrependByte(invalidFrameCounter)
	return builder.Offset()
}
