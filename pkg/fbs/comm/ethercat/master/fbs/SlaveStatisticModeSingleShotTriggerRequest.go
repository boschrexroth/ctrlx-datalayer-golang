// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbs

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type SlaveStatisticModeSingleShotTriggerRequestT struct {
	Force bool
}

func (t *SlaveStatisticModeSingleShotTriggerRequestT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	SlaveStatisticModeSingleShotTriggerRequestStart(builder)
	SlaveStatisticModeSingleShotTriggerRequestAddForce(builder, t.Force)
	return SlaveStatisticModeSingleShotTriggerRequestEnd(builder)
}

func (rcv *SlaveStatisticModeSingleShotTriggerRequest) UnPackTo(t *SlaveStatisticModeSingleShotTriggerRequestT) {
	t.Force = rcv.Force()
}

func (rcv *SlaveStatisticModeSingleShotTriggerRequest) UnPack() *SlaveStatisticModeSingleShotTriggerRequestT {
	if rcv == nil { return nil }
	t := &SlaveStatisticModeSingleShotTriggerRequestT{}
	rcv.UnPackTo(t)
	return t
}

type SlaveStatisticModeSingleShotTriggerRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsSlaveStatisticModeSingleShotTriggerRequest(buf []byte, offset flatbuffers.UOffsetT) *SlaveStatisticModeSingleShotTriggerRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &SlaveStatisticModeSingleShotTriggerRequest{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsSlaveStatisticModeSingleShotTriggerRequest(buf []byte, offset flatbuffers.UOffsetT) *SlaveStatisticModeSingleShotTriggerRequest {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &SlaveStatisticModeSingleShotTriggerRequest{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *SlaveStatisticModeSingleShotTriggerRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *SlaveStatisticModeSingleShotTriggerRequest) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *SlaveStatisticModeSingleShotTriggerRequest) Force() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *SlaveStatisticModeSingleShotTriggerRequest) MutateForce(n bool) bool {
	return rcv._tab.MutateBoolSlot(4, n)
}

func SlaveStatisticModeSingleShotTriggerRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func SlaveStatisticModeSingleShotTriggerRequestAddForce(builder *flatbuffers.Builder, force bool) {
	builder.PrependBoolSlot(0, force, false)
}
func SlaveStatisticModeSingleShotTriggerRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
