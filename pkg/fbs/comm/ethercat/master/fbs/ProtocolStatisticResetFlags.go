// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbs

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ProtocolStatisticResetFlagsT struct {
	NumRequests bool `json:"numRequests"`
	NumBytes bool `json:"numBytes"`
}

func (t *ProtocolStatisticResetFlagsT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	return CreateProtocolStatisticResetFlags(builder, t.NumRequests, t.NumBytes)
}
func (rcv *ProtocolStatisticResetFlags) UnPackTo(t *ProtocolStatisticResetFlagsT) {
	t.NumRequests = rcv.NumRequests()
	t.NumBytes = rcv.NumBytes()
}

func (rcv *ProtocolStatisticResetFlags) UnPack() *ProtocolStatisticResetFlagsT {
	if rcv == nil { return nil }
	t := &ProtocolStatisticResetFlagsT{}
	rcv.UnPackTo(t)
	return t
}

type ProtocolStatisticResetFlags struct {
	_tab flatbuffers.Struct
}

func (rcv *ProtocolStatisticResetFlags) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ProtocolStatisticResetFlags) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *ProtocolStatisticResetFlags) NumRequests() bool {
	return rcv._tab.GetBool(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *ProtocolStatisticResetFlags) MutateNumRequests(n bool) bool {
	return rcv._tab.MutateBool(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *ProtocolStatisticResetFlags) NumBytes() bool {
	return rcv._tab.GetBool(rcv._tab.Pos + flatbuffers.UOffsetT(1))
}
func (rcv *ProtocolStatisticResetFlags) MutateNumBytes(n bool) bool {
	return rcv._tab.MutateBool(rcv._tab.Pos+flatbuffers.UOffsetT(1), n)
}

func CreateProtocolStatisticResetFlags(builder *flatbuffers.Builder, numRequests bool, numBytes bool) flatbuffers.UOffsetT {
	builder.Prep(1, 2)
	builder.PrependBool(numBytes)
	builder.PrependBool(numRequests)
	return builder.Offset()
}
