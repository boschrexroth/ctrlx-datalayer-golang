// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbs

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

///Protocol statistic counters
type ProtocolStatisticCountersT struct {
	NumRequests uint32 `json:"numRequests"`
	NumBytes uint32 `json:"numBytes"`
}

func (t *ProtocolStatisticCountersT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	return CreateProtocolStatisticCounters(builder, t.NumRequests, t.NumBytes)
}
func (rcv *ProtocolStatisticCounters) UnPackTo(t *ProtocolStatisticCountersT) {
	t.NumRequests = rcv.NumRequests()
	t.NumBytes = rcv.NumBytes()
}

func (rcv *ProtocolStatisticCounters) UnPack() *ProtocolStatisticCountersT {
	if rcv == nil { return nil }
	t := &ProtocolStatisticCountersT{}
	rcv.UnPackTo(t)
	return t
}

type ProtocolStatisticCounters struct {
	_tab flatbuffers.Struct
}

func (rcv *ProtocolStatisticCounters) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ProtocolStatisticCounters) Table() flatbuffers.Table {
	return rcv._tab.Table
}

///Number of requests
func (rcv *ProtocolStatisticCounters) NumRequests() uint32 {
	return rcv._tab.GetUint32(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
///Number of requests
func (rcv *ProtocolStatisticCounters) MutateNumRequests(n uint32) bool {
	return rcv._tab.MutateUint32(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

///Number of bytes send or received
func (rcv *ProtocolStatisticCounters) NumBytes() uint32 {
	return rcv._tab.GetUint32(rcv._tab.Pos + flatbuffers.UOffsetT(4))
}
///Number of bytes send or received
func (rcv *ProtocolStatisticCounters) MutateNumBytes(n uint32) bool {
	return rcv._tab.MutateUint32(rcv._tab.Pos+flatbuffers.UOffsetT(4), n)
}

func CreateProtocolStatisticCounters(builder *flatbuffers.Builder, numRequests uint32, numBytes uint32) flatbuffers.UOffsetT {
	builder.Prep(4, 8)
	builder.PrependUint32(numBytes)
	builder.PrependUint32(numRequests)
	return builder.Offset()
}
