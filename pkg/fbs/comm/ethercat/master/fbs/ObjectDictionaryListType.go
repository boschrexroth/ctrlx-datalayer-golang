// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbs

import "strconv"

///Object dictionary list type
///length: lengths of each list type
///all: all objects
///rxPDOMap: only pdo mappable objects
///txPDOMap: only pdo mappable objects that can be changed
///storeForeReplacement: only stored for a device replacement object
///startupParam: only startup parameter objects
type ObjectDictionaryListType byte

const (
	ObjectDictionaryListTypelength               ObjectDictionaryListType = 0
	ObjectDictionaryListTypeall                  ObjectDictionaryListType = 1
	ObjectDictionaryListTyperxPDOMap             ObjectDictionaryListType = 2
	ObjectDictionaryListTypetxPDOMap             ObjectDictionaryListType = 3
	ObjectDictionaryListTypestoredForReplacement ObjectDictionaryListType = 4
	ObjectDictionaryListTypestartupParam         ObjectDictionaryListType = 5
)

var EnumNamesObjectDictionaryListType = map[ObjectDictionaryListType]string{
	ObjectDictionaryListTypelength:               "length",
	ObjectDictionaryListTypeall:                  "all",
	ObjectDictionaryListTyperxPDOMap:             "rxPDOMap",
	ObjectDictionaryListTypetxPDOMap:             "txPDOMap",
	ObjectDictionaryListTypestoredForReplacement: "storedForReplacement",
	ObjectDictionaryListTypestartupParam:         "startupParam",
}

var EnumValuesObjectDictionaryListType = map[string]ObjectDictionaryListType{
	"length":               ObjectDictionaryListTypelength,
	"all":                  ObjectDictionaryListTypeall,
	"rxPDOMap":             ObjectDictionaryListTyperxPDOMap,
	"txPDOMap":             ObjectDictionaryListTypetxPDOMap,
	"storedForReplacement": ObjectDictionaryListTypestoredForReplacement,
	"startupParam":         ObjectDictionaryListTypestartupParam,
}

func (v ObjectDictionaryListType) String() string {
	if s, ok := EnumNamesObjectDictionaryListType[v]; ok {
		return s
	}
	return "ObjectDictionaryListType(" + strconv.FormatInt(int64(v), 10) + ")"
}
