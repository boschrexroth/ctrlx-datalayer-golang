// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbs

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type SlaveStatisticModeAutoRequestT struct {
	Enable bool
	IdleTime uint32
}

func (t *SlaveStatisticModeAutoRequestT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	SlaveStatisticModeAutoRequestStart(builder)
	SlaveStatisticModeAutoRequestAddEnable(builder, t.Enable)
	SlaveStatisticModeAutoRequestAddIdleTime(builder, t.IdleTime)
	return SlaveStatisticModeAutoRequestEnd(builder)
}

func (rcv *SlaveStatisticModeAutoRequest) UnPackTo(t *SlaveStatisticModeAutoRequestT) {
	t.Enable = rcv.Enable()
	t.IdleTime = rcv.IdleTime()
}

func (rcv *SlaveStatisticModeAutoRequest) UnPack() *SlaveStatisticModeAutoRequestT {
	if rcv == nil { return nil }
	t := &SlaveStatisticModeAutoRequestT{}
	rcv.UnPackTo(t)
	return t
}

type SlaveStatisticModeAutoRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsSlaveStatisticModeAutoRequest(buf []byte, offset flatbuffers.UOffsetT) *SlaveStatisticModeAutoRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &SlaveStatisticModeAutoRequest{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsSlaveStatisticModeAutoRequest(buf []byte, offset flatbuffers.UOffsetT) *SlaveStatisticModeAutoRequest {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &SlaveStatisticModeAutoRequest{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *SlaveStatisticModeAutoRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *SlaveStatisticModeAutoRequest) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *SlaveStatisticModeAutoRequest) Enable() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *SlaveStatisticModeAutoRequest) MutateEnable(n bool) bool {
	return rcv._tab.MutateBoolSlot(4, n)
}

func (rcv *SlaveStatisticModeAutoRequest) IdleTime() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SlaveStatisticModeAutoRequest) MutateIdleTime(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func SlaveStatisticModeAutoRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func SlaveStatisticModeAutoRequestAddEnable(builder *flatbuffers.Builder, enable bool) {
	builder.PrependBoolSlot(0, enable, false)
}
func SlaveStatisticModeAutoRequestAddIdleTime(builder *flatbuffers.Builder, idleTime uint32) {
	builder.PrependUint32Slot(1, idleTime, 0)
}
func SlaveStatisticModeAutoRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
