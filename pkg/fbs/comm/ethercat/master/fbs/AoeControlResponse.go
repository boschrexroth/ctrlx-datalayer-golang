// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package fbs

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type AoeControlResponseT struct {
	ErrorCode uint32
	CmdResult uint32
}

func (t *AoeControlResponseT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil { return 0 }
	AoeControlResponseStart(builder)
	AoeControlResponseAddErrorCode(builder, t.ErrorCode)
	AoeControlResponseAddCmdResult(builder, t.CmdResult)
	return AoeControlResponseEnd(builder)
}

func (rcv *AoeControlResponse) UnPackTo(t *AoeControlResponseT) {
	t.ErrorCode = rcv.ErrorCode()
	t.CmdResult = rcv.CmdResult()
}

func (rcv *AoeControlResponse) UnPack() *AoeControlResponseT {
	if rcv == nil { return nil }
	t := &AoeControlResponseT{}
	rcv.UnPackTo(t)
	return t
}

type AoeControlResponse struct {
	_tab flatbuffers.Table
}

func GetRootAsAoeControlResponse(buf []byte, offset flatbuffers.UOffsetT) *AoeControlResponse {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &AoeControlResponse{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsAoeControlResponse(buf []byte, offset flatbuffers.UOffsetT) *AoeControlResponse {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &AoeControlResponse{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *AoeControlResponse) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *AoeControlResponse) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *AoeControlResponse) ErrorCode() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *AoeControlResponse) MutateErrorCode(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *AoeControlResponse) CmdResult() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *AoeControlResponse) MutateCmdResult(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func AoeControlResponseStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func AoeControlResponseAddErrorCode(builder *flatbuffers.Builder, errorCode uint32) {
	builder.PrependUint32Slot(0, errorCode, 0)
}
func AoeControlResponseAddCmdResult(builder *flatbuffers.Builder, cmdResult uint32) {
	builder.PrependUint32Slot(1, cmdResult, 0)
}
func AoeControlResponseEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
